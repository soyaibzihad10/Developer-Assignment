{
	"info": {
		"_postman_id": "721220c1-0c48-47b9-a9d4-841299577403",
		"name": "affpilot-auth",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" width=\"2162\" height=\"1530\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37975347",
		"_collection_link": "https://none11-5627.postman.co/workspace/none-Workspace~97085782-b278-41b0-8928-215f543210b2/collection/37975347-721220c1-0c48-47b9-a9d4-841299577403?action=share&source=collection_link&creator=37975347"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "user-password-reset",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"ff91f8e55fc7a6d87dce70d38e92b5afbc630c098829b5c0baebe35dba58c078\",\n    \"password\": \"edu.iaminterstellar\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/password-reset",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"password-reset"
							]
						}
					},
					"response": []
				},
				{
					"name": "user-password-reset-request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"shoaibzihad10@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/password-reset-request",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"password-reset-request"
							]
						}
					},
					"response": []
				},
				{
					"name": "user-resend-code",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"edu.iaminterstellar@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/resend-verification",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"resend-verification"
							]
						}
					},
					"response": []
				},
				{
					"name": "user-logout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "user-verify",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/verify?token=29ea85e2ca19ec7891fe65302be4f002",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"verify"
							],
							"query": [
								{
									"key": "token",
									"value": "29ea85e2ca19ec7891fe65302be4f002"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "user-login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"edu.iaminterstellar@gmail.com\",\n    \"password\": \"edu.iaminterstellar\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "user-check-login",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/check",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"check"
							]
						}
					},
					"response": []
				},
				{
					"name": "user-register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"edu.iaminterstellar@gmail.com\",\n    \"password\": \"edu.iaminterstellar\",\n    \"username\": \"edu.iaminterstellar\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				}
			]
		},
		{
			"name": "roles",
			"item": [
				{
					"name": "roles-create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user\",\n    \"description\": \"Regular user with access only to their own data\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/roles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "roles-all-roles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/roles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "roles-get-user-by-id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/roles/500690e4-8ac3-402c-92eb-086177700ad4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"roles",
								"500690e4-8ac3-402c-92eb-086177700ad4"
							]
						}
					},
					"response": []
				},
				{
					"name": "roles-update",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/roles/500690e4-8ac3-402c-92eb-086177700ad4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"roles",
								"500690e4-8ac3-402c-92eb-086177700ad4"
							]
						}
					},
					"response": []
				},
				{
					"name": "roles-delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/roles/500690e4-8ac3-402c-92eb-086177700ad4",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"roles",
								"500690e4-8ac3-402c-92eb-086177700ad4"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "permissions",
			"item": [
				{
					"name": "permissions-get-permissions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/permissions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "permissions-get-my-permissions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/me/permissions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"me",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "permissions-get-prmission-by-id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/permissions/b9155af6-cd4a-4c0a-b235-fbf4515e4952",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"permissions",
								"b9155af6-cd4a-4c0a-b235-fbf4515e4952"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "users-get-my-profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "users-all-users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "users-get-user-by-id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users/b9155af6-cd4a-4c0a-b235-fbf4515e4952",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"b9155af6-cd4a-4c0a-b235-fbf4515e4952"
							]
						}
					},
					"response": []
				},
				{
					"name": "users-update-user",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"shoaibzihad10\",\n    \"first_name\": \"Shoaib\",\n    \"last_name\": \"Zihad\",\n    \"email\": \"shoaibzihad10@gmail.com\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/ce8e8f69-5f2a-4c48-a99d-2b15d7efd429",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"ce8e8f69-5f2a-4c48-a99d-2b15d7efd429"
							]
						}
					},
					"response": []
				},
				{
					"name": "users-delete-request",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users/ce8e8f69-5f2a-4c48-a99d-2b15d7efd429/request-deletion",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"ce8e8f69-5f2a-4c48-a99d-2b15d7efd429",
								"request-deletion"
							]
						}
					},
					"response": []
				},
				{
					"name": "users-delete-by-id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users/ce8e8f69-5f2a-4c48-a99d-2b15d7efd429",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"ce8e8f69-5f2a-4c48-a99d-2b15d7efd429"
							]
						}
					},
					"response": []
				},
				{
					"name": "users-change-role",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"moderator\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/6f81ca68-412d-4f69-bb9b-e25a7976ce72/role",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"6f81ca68-412d-4f69-bb9b-e25a7976ce72",
								"role"
							]
						}
					},
					"response": []
				},
				{
					"name": "user-promote-to-admin",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users/9701311b-dbef-40c9-8c5c-fc6e65a3ad8d/promote/admin",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"9701311b-dbef-40c9-8c5c-fc6e65a3ad8d",
								"promote",
								"admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "users-promote-to-moderator",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users/9701311b-dbef-40c9-8c5c-fc6e65a3ad8d/promote/moderator",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"9701311b-dbef-40c9-8c5c-fc6e65a3ad8d",
								"promote",
								"moderator"
							]
						}
					},
					"response": []
				},
				{
					"name": "users-demote-user",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/users/9701311b-dbef-40c9-8c5c-fc6e65a3ad8d/demote",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"9701311b-dbef-40c9-8c5c-fc6e65a3ad8d",
								"demote"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}